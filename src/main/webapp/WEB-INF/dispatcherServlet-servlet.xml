<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 配置自定扫描的包 -->
	<context:component-scan base-package="com.lw.mvc"></context:component-scan>

	<!-- 配置视图解析器: 如何把 handler 方法返回值解析为实际的物理视图 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>


	<!-- 配置直接转发的页面,不用直接经过Controller 一旦配置了该标签,那么其他的需要经过Controller的操作将会失效 <mvc:view-controller 
		path="/success" view-name="success"/> -->
	<!-- 处理静态资源的访问 但是当使用了这个配置之后,其它经过Controller的将会发生404 解决方法：添加<mvc:annotation-driven></mvc:annotation-driven> -->

	<mvc:default-servlet-handler />
	<!-- 引用 ConverSionService -->
	<!-- 	
		<mvc:annotation-driven conversion-service="formattingConversionServiceFactoryBean"></mvc:annotation-driven>
		当操作数据校验时需要此标签
	 -->
	<mvc:annotation-driven conversion-service="formattingConversionServiceFactoryBean"></mvc:annotation-driven>

	<!-- 配置ConverSionService -->
	<bean id="formattingConversionServiceFactoryBean"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<ref bean="employeeConvert" />
			</set>
		</property>
	</bean>

	<!-- <mvc:annotation-driven></mvc:annotation-driven> -->
	<!-- 配置直接转发的页面 可以直接相应转发的页面, 而无需再经过 Handler 的方法. <mvc:view-controller path="/success" 
		view-name="success"/> 在实际开发中通常都需配置 mvc:annotation-driven 标签 <mvc:annotation-driven></mvc:annotation-driven> -->

	<mvc:interceptors>
		<!-- 配置自定义拦截器 -->
		<bean class="com.lw.mvc.interceptor.FirstInterceptor"></bean>
	</mvc:interceptors>
	
	<!-- 
		文件上传MultipartResolver 
		需要注意的是：文件名必须是multipartResolver,否则springmvc找不到multipartResolver
	-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="102400"></property>
	</bean>
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<!-- 放入request域的属性名 -->
		<property name="exceptionAttribute" value="ex"></property>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.ArrayIndexOutOfBoundsException">error</prop>
			</props>
		</property>
	</bean>
</beans>
